#!/bin/bash
#
# Copyright:: Copyright 2017 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -eou pipefail

function usage() {
  cat <<DOC
Usage: ${0##*/} SUBCOMMAND [PARAMETERS]

SUBCOMMANDS:
    append-if-missing STRING FILE             Append STRING to FILE if not already there.
    find-and-replace REGEX_STR STRING FILE    Replace REGEX_STR with STRING in FILE. Supports multiline replace. Uses perl.
DOC
}

function append_if_missing() {
  string=${2:?missing parameter: string to append}
  file=${3:?missing parameter: file to modify}

  if ! grep -q -F "$string" "$file"; then
    echo -e "$string" >> "$file"
  fi
}

function find_and_replace() {
  regex=${2:?missing parameter: regex to find}
  replace=${3:?missing parameter: string to replace}
  file=${4:?missing parameter: file to modify}

  perl -i -p0e "s/$regex/$replace/smg" "$file"
}

case "${1:-}" in
  "append-if-missing")
    append_if_missing "$@"
    ;;
  "find-and-replace")
    find_and_replace "$@"
    ;;
  "-h"|"--help")
    usage
    ;;
  "")
    usage
    exit 1
    ;;
  *)
    echo "${0##*/}: invalid option '$1'"
    echo "Try '${0##*/} --help' for more information."
    exit 2
esac
