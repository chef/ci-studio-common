#!/bin/bash
#
# Copyright:: Copyright 2017 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -eou pipefail

INSTALL_HOOK_DIR="/opt/ci-studio-common/buildkite-agent-hooks"

HOME="${HOME:-/root}"

UNAME=$(uname -sm | awk '{print tolower($0)}')

if [[ ($UNAME == *"mac os x"*) || ($UNAME == *darwin*) ]]; then
  PLATFORM="darwin"
elif [[ ($UNAME == *"freebsd"*) ]]; then
  PLATFORM="freebsd"
else
  PLATFORM="linux"
fi

function usage() {
  cat <<DOC
Usage: ${0##*/} [SUBCOMMAND]

Helpers that help setup Buildkite Agents. If no SUBCOMMAND is given, this utility will
install the 'buildkite-agent' utility. If that is the case, make sure to pass in the
'TOKEN' environment variable.

SUBCOMMANDS:
  <EMPTY>            Install the Buildkite Agent.
  hook TYPE HOOK     Install one of the supported HOOKS as an Buildkite Agent Hook.

SUPPORTED HOOK TYPES:
  https://buildkite.com/docs/agent/v3/hooks#available-hooks

SUPPORTED HOOKS:
  remove-containers               Remove all Docker containers.
  update-utilities                Update ci-studio-common and habitat.
  use-merge-head                  Checkout the GitHub merge HEAD instead of the branch.
  workspace-reassign-ownership    Reassign ownership of the workspace to the buildkite-agent.
DOC
}

function bk_agent_hook_directory() {
  if [[ -d "$HOME/.buildkite-agent" ]]; then
    echo "$HOME/.buildkite-agent/hooks"
    return
  fi

  case "$PLATFORM" in
    darwin)
      # If .buildkite-agent dir does not exist, assume homebrew
      echo "/usr/local/etc/buildkite-agent/hooks"
      return
      ;;
    linux)
      echo "/etc/buildkite-agent/hooks"
      return
      ;;
  esac
}

install_agent() {
  curl -sL https://raw.githubusercontent.com/buildkite/agent/master/install.sh | bash
}

function install_agent_hook() {
  type="$2"
  hook="$3"

  if [[ -z "$hook" ]]; then
    echo -e "${0##*/}: No hook specified. You must specify a HOOK.\\n"
    usage
    exit 2
  fi

  source_file="$INSTALL_HOOK_DIR/$hook.sh"
  hook_file="$(bk_agent_hook_directory)/$type"

  if [[ ! -f "$source_file" ]]; then
    echo -e "${0##*/}: The hook you specified does not exist.\\n"
    exit 1
  fi

  if [[ ! -f "$hook_file" ]]; then
    echo -e "#!/bin/bash\\n\\nset -eou pipefail" > "$hook_file"
  fi

  header="echo \"--- executing hook: $hook\""
  content="source $source_file"
  footer="echo \"hook complete: $hook\""
  full_content="$header\\n$content\\n$footer"

  if grep -q -F "$footer" "$hook_file"; then
    file-mod find-and-replace "$header.*$footer" "$full_content" "$hook_file"
  else
    # Insert into file
    echo -e "\\n\\n$full_content" >> "$hook_file"
    chmod a+x "$hook_file"
  fi
}

case "${1:-}" in
  "-h"|"--help")
    usage
    exit 0
    ;;
  "hook")
    install_agent_hook "$@"
    ;;
  "")
    install_agent
    ;;
  *)
    echo "${0##*/}: invalid option '$1'"
    echo "Try '${0##*/} --help' for more information."
    exit 2
esac
