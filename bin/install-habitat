#!/bin/bash
#
# Copyright:: Copyright 2017 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# This script is based off of https://gist.github.com/cosimo/3760587

set -eou pipefail

function usage() {
  cat <<DOC
Usage: ${0##*/} [-u USER] [-v HAB_VERSION] [-c HAB_CHANNEL] -h

Install VERSION of habitat from CHANNEL as the USER user.

OPTIONS:
  -h            Show this message.
  -u USER       The user you want to run hab commands as. (default: user in '/var/opt/ci-studio-common/.hab-user' file, current user, or root)
  -v VERSION    Which version of Habitat you wish to install. (default: version in '.hab-version' file)
  -c CHANNEL    The channel from which you wish to install Habitat. (default: stable)
DOC
}

function lock() {
  exec 200>/var/lock/ci-studio-common-install-habitat.lock

  flock -n 200 \
    && return 0 \
    || return 1
}

function handle_no_lock() {
  echo "Habitat install already in progress -- skipping"
  exit 0
}

user="${USER:-root}"
version=$(curl -sL https://raw.githubusercontent.com/chef/ci-studio-common/master/.hab-version)
channel=stable

# If we've specified a certain user that should own Hab, use that
hab_user_file="/var/opt/ci-studio-common/.hab-user"
if [[ -s $hab_user_file ]]; then
  user=$(cat $hab_user_file)
fi

# Parse the options
while getopts ":c:v:u:h" opt; do
  case "${opt}" in
    c)
      channel="$OPTARG"
      ;;
    v)
      version="$OPTARG"
      ;;
    u)
      user="$OPTARG"
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      usage
      exit 1
      ;;
    *)
      ;;
  esac
done
shift $((OPTIND -1))

lock || handle_no_lock

# Do not attempt to install Habitat if it is up-to-date
do_install_habitat="true"
hab_version_file="/var/opt/ci-studio-common/.hab-version"
if [[ -s $hab_version_file ]]; then
  current_version=$(cat $hab_version_file)

  if [[ "$version" = "$current_version" ]]; then
    do_install_habitat="false"
  fi
fi

echo "--- Installing Habitat"

echo "Going to install habitat '$version' as '$user' user"
tmp_user_file=$(mktemp hab-user.XXXXXX)
echo "$user" > "$tmp_user_file"
mv "$tmp_user_file" "$hab_user_file"

echo "Creating /hab directory"
mkdir -p /hab

if [[ "$do_install_habitat" = "true" ]]; then
  echo "Running habitat curl|bash"
  curl -sL https://raw.githubusercontent.com/habitat-sh/habitat/master/components/hab/install.sh | bash -s -- -v "$version" -c "$channel"
  echo "$version" > "$hab_version_file"
else
  echo "Habitat is already up-to-date"
fi

hab_bin=$(command -v hab)
echo "Granting '$user' access to $hab_bin"
chown -R "root:$user" "$hab_bin"

if [[ "$user" != "root" ]]; then
  install_hab_bin=$(command -v install-habitat)
  echo "Granting '$user' sudo permissions to run $hab_bin and $install_hab_bin"
  file-mod append-if-missing "$user ALL=NOPASSWD:SETENV: $hab_bin" "/etc/sudoers.d/$user"
  file-mod append-if-missing "$user ALL=NOPASSWD:SETENV: $install_hab_bin" "/etc/sudoers.d/$user"
  chmod 440 "/etc/sudoers.d/$user"
fi

echo "Granting $user access to /hab"
chmod -R g+rwx /hab
chown -R "root:$user" /hab
