#!/bin/bash
# shellcheck disable=SC1090,SC1091
#
# Copyright:: Copyright 2017 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Source the plan.sh and default.toml files (if they exist)
source /src/habitat/plan.sh
export TOML_FILE=/src/habitat/default.toml

# The folder where all the documentation is stored
[[ ! -d /tmp/docs ]] && mkdir /tmp/docs

# This is a helper function that allows use to document functions inline with the
# code, but also make that documentation available to end user in the studio.
#
# The first line of the document will show up when the user runs 'describe'.
# The full content will appear when the user runs 'describe <function>'
#
# When running in a CI environment, these documents are not created.
function document() {
  name="${1}"
  content=$(cat /dev/stdin)

  [ -z "$CI" ] && echo -e "$content" > "/tmp/docs/${name}"
}

# This function allows the user to learn more about the studio.
#
#   1. Passing no argument will print out a list of all documented functions
#   2. Passing the name of a function will print out that functions documentation
function describe() {
  if [ -z "$CI" ]
  then
    echo ""
    if [[ -z "${1}" ]]; then
      echo "The following functions are available for your use in this studio:"
      echo ""
      for file in /tmp/docs/*
      do
        echo "  $(basename "$file")"
        echo "  $(head -n 1 "$file")"
      done
      echo ""
      echo "To learn more about a particular function, run 'describe <function>'."
    else
      cat "/tmp/docs/$1"
    fi
    echo ""
  fi
}

# This function allows the user to print a nice "welcome" or "getting started"
# message when a new user enters the studio.
function getting_started() {
  [ -z "$CI" ] && cat /dev/stdin
}

# Source the .secrets file (if it exists)
if [ -f /src/.secrets ]
then
  source /src/.secrets
fi

source_msg="Helpers from ci-studio-common"

for file in $(hab pkg path "chef/ci-studio-common")/dot-studio/*
do
  source "$file"
done

# Source all the files available in the .studio directory of the /src directory
if [ -d /src/.studio ]
then
  for file in /src/.studio/*
  do
    source "$file"
  done
  source_msg="$source_msg and your local .studio folder"
fi

echo "$source_msg have been added. Run 'describe' for more information."
