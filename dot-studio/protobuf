#!/bin/bash
# shellcheck disable=SC2154,SC1091
#
# Copyright:: Copyright 2017 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

document "compile_go_protobuf" <<DOC
  Compile the protobuf definitions from the provided script.

  @(arg:1) Path to the script to execute. (default: scripts/grpc.sh)

  The script should look like:
  ------------------------------------------------------------------
  #!/bin/bash
  set -x
  GOPATH=\$(go env GOPATH)

  protoc -I. \\
    -I\$GOPATH/src \\
    --go_out=plugins=grpc:. \\
    proto/*.proto
  ------------------------------------------------------------------

DOC
function compile_go_protobuf() {
  local rc
  proto_script="${1:-scripts/grpc.sh}"
  OLD_CC=$CC
  unset CC

  # Verify that the script exist ans it is an executable
  if [[ -x $proto_script ]]; then
    install_if_missing core/protobuf-cpp protoc
    GO_TOOL_VENDOR=true install_go_tool github.com/golang/protobuf/protoc-gen-go

    # Install grpc-gateway
    # only_if the script has an entry like: '--grpc-gateway_out'
    if [[ "$(grep -w "\\-\\-grpc-gateway_out" "$proto_script")" != "" ]]; then
      local grpc_gateway_proto_tools=(
        github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
        github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
      )

      GO_TOOL_VENDOR=true install_go_tool "${grpc_gateway_proto_tools[@]}"
    fi

    # Install protoc-gen-lint from the internet instead of
    # installing it from our vendor/ directory. (why? because if
    # not we will need to add it to all our Gopkg.toml files)
    #
    # only_if the script has an entry like: '--lint_out'
    if [[ "$(grep -w "\\-\\-lint_out" "$proto_script")" != "" ]]; then
      GO_TOOL_METHOD="get" install_go_tool github.com/ckaznocha/protoc-gen-lint
    fi

    eval "$proto_script";
    rc=$?
  else
    error "File '$proto_script' doesn't exist or is not executable."
    error "Try 'describe ${FUNCNAME[0]}'."
    CC=$OLD_CC
    return 1
  fi

  CC=$OLD_CC
  return $rc
}
add_alias "compile_go_protobuf" "co"
